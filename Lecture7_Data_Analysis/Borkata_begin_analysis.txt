# Зареждане на CSV файл

import csv

...

with open('catalog.csv') as f:
    reader = csv.reader(f)
    catalog = []
    for row_fields in reader:  # при всяка итерация row_fields съдържа list от str за всяко поле от реда
        catalog.append(row_fields)

    # или с магията на Python :o)

    catalog = list(reader)
#1
import sys
import os
from datetime import datetime, timezone
from decimal import Decimal

from sales import load_sales_data


def main():
    try:
        # TODO: parse command line arguments
        filename_catalog, filename_sales = _parse_command_line_parameters()
        print(filename_catalog, filename_sales)

        # TODO: load sales data
        sales = load_sales_data(filename_sales)
        print(sales[:5])

        _print_summary(sales)

        # TODO: calculate
        # TODO: print

        return 0
    except Exception as e:
        print("Error: " + str(e))
        return 1


def _parse_command_line_parameters():
    if len(sys.argv) < 3:
        raise ValueError("Usage: {}  <catalog.csv> <sales.csv>".format(sys.argv[0]))

    filename_catalog, filename_sales = sys.argv[1:3]
    if not os.path.isfile(filename_catalog)\
            or not os.access(filename_catalog, os.R_OK):
        raise ValueError("Invalid or inaccessible catalog file: '{}'".format(filename_catalog))

    if not os.path.isfile(filename_sales)\
            or not os.access(filename_sales, os.R_OK):
        raise ValueError("Invalid or inaccessible catalog file: '{}'".format(filename_sales))

    return filename_catalog, filename_sales


def _print_summary(sales):

    if not sales:
        raise ValueError("Sales file is empty")

    total_count = len(sales)
    total_sales_amount = Decimal(0)
    sale_timestamp_min = datetime.max.replace(tzinfo=timezone.utc)
    sale_timestamp_max = datetime.min.replace(tzinfo=timezone.utc)
    for sales_item in sales:
        total_sales_amount += sales_item.price
        if sales_item.sale_timestamp < sale_timestamp_min:
            sale_timestamp_min = sales_item.sale_timestamp
        if sales_item.sale_timestamp > sale_timestamp_max:
            sale_timestamp_max = sales_item.sale_timestamp

    print("""
Обобщение
---------
    Общ брой продажби: {total_sales_count}
    Общо сума продажби: {total_sales_amount} €
    Средна цена на продажба: {avg_price} €
    Начало на период на данните: {sale_timestamp_min}
    Край на период на данните: {sale_timestamp_max}

""".format(
        total_sales_count=total_count,
        total_sales_amount=total_sales_amount,
        avg_price=total_sales_amount/total_count,
        sale_timestamp_min=sale_timestamp_min,
        sale_timestamp_max=sale_timestamp_max,
    ))


if __name__ == "__main__":
    sys.exit(main())
#2
import csv
import iso8601
from decimal import Decimal
from datetime import datetime, timezone


class Item:

    def __init__(self, item_id, country, city, sale_timestamp, price):
        self.item_id = str(item_id)
        self.country = str(country)
        self.city = str(city)

        if not isinstance(sale_timestamp, datetime):
            self.sale_timestamp = iso8601.parse_date(str(sale_timestamp))
        else:
            self.sale_timestamp = sale_timestamp

        # check if sale_timestamp is aware ...
        if self.sale_timestamp.tzinfo is None:
            raise ValueError("Naive datetimes not supported")
        else:
            self.sale_timestamp = self.sale_timestamp.astimezone(timezone.utc)

        if not isinstance(price, Decimal):
            self.price = Decimal(price)
        else:
            self.price = price

    def __repr__(self):
        return "Item: " + str(self.__dict__)


def load_sales_data(filename_sales):
    with open(filename_sales) as f:
        sales = []
        for sales_row in csv.reader(f):
            sales.append(Item(
                item_id=sales_row[0],
                country=sales_row[1],
                city=sales_row[2],
                sale_timestamp=sales_row[3],
                price=sales_row[4],
            ))
        return sales


if __name__ == "__main__":
    # TODO: test Item
    from datetime import datetime

    i = Item(item_id='345',
             country='BG',
             city='Sofia',
             sale_timestamp=datetime.now(),
             price=234)
    print(i)